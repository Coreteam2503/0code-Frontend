{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jcupp\\\\coderepos\\\\0code\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Timer from './components/Timer';\nimport Question from './components/Question';\nimport Scoreboard from './components/Scoreboard';\nimport quizService from './services/quizService';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GAME_STATES = {\n  MENU: 'menu',\n  PLAYING: 'playing',\n  PAUSED: 'paused',\n  FINISHED: 'finished'\n};\nfunction App() {\n  _s();\n  // Game state\n  const [gameState, setGameState] = useState(GAME_STATES.MENU);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [incorrectAnswers, setIncorrectAnswers] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [showResult, setShowResult] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [timerReset, setTimerReset] = useState(0);\n\n  // Timer state\n  const [timerDuration] = useState(60); // 60 seconds\n  const [isTimerActive, setIsTimerActive] = useState(false);\n\n  // Load questions when component mounts\n  useEffect(() => {\n    loadQuestions();\n  }, []);\n\n  // Timer effect for tracking elapsed time\n  useEffect(() => {\n    let intervalId;\n    if (isTimerActive) {\n      intervalId = setInterval(() => {\n        setTimeElapsed(prev => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(intervalId);\n  }, [isTimerActive]);\n  const loadQuestions = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Try to get random questions, fallback to all questions if needed\n      let questionsData;\n      try {\n        questionsData = await quizService.getRandomQuestions(10);\n      } catch (err) {\n        console.warn('Random questions not available, trying all questions');\n        questionsData = await quizService.getAllQuestions();\n      }\n      if (questionsData && questionsData.length > 0) {\n        setQuestions(questionsData);\n      } else {\n        // If no questions from API, use sample questions\n        setQuestions(getSampleQuestions());\n      }\n    } catch (err) {\n      console.error('Error loading questions:', err);\n      setError('Failed to load questions. Using sample questions.');\n      setQuestions(getSampleQuestions());\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getSampleQuestions = () => {\n    return [{\n      id: 1,\n      questionText: 'print(\"Hello, World!\")\\\\nprint(\"Welcome to Python!\")',\n      answer: 'This code prints two lines of text to the console',\n      codeSnippet: 'print(\"Hello, World!\")\\nprint(\"Welcome to Python!\")',\n      difficultyLevel: 'BEGINNER'\n    }, {\n      id: 2,\n      questionText: 'for i in range(5):\\\\n    print(i)',\n      answer: 'This code prints numbers 0 through 4, each on a new line',\n      codeSnippet: 'for i in range(5):\\n    print(i)',\n      difficultyLevel: 'BEGINNER'\n    }, {\n      id: 3,\n      questionText: 'x = [1, 2, 3]\\\\ny = x\\\\ny.append(4)\\\\nprint(x)',\n      answer: 'This code prints [1, 2, 3, 4] because y and x reference the same list',\n      codeSnippet: 'x = [1, 2, 3]\\ny = x\\ny.append(4)\\nprint(x)',\n      difficultyLevel: 'INTERMEDIATE'\n    }, {\n      id: 4,\n      questionText: 'def factorial(n):\\\\n    if n <= 1:\\\\n        return 1\\\\n    return n * factorial(n-1)',\n      answer: 'This is a recursive function that calculates the factorial of a number',\n      codeSnippet: 'def factorial(n):\\n    if n <= 1:\\n        return 1\\n    return n * factorial(n-1)',\n      difficultyLevel: 'INTERMEDIATE'\n    }, {\n      id: 5,\n      questionText: 'import pandas as pd\\\\ndf = pd.DataFrame({\"A\": [1, 2], \"B\": [3, 4]})',\n      answer: 'This code creates a pandas DataFrame with two columns A and B',\n      codeSnippet: 'import pandas as pd\\ndf = pd.DataFrame({\"A\": [1, 2], \"B\": [3, 4]})',\n      difficultyLevel: 'ADVANCED'\n    }];\n  };\n  const startGame = () => {\n    if (questions.length === 0) {\n      setError('No questions available. Please load questions first.');\n      return;\n    }\n    resetGameState();\n    setGameState(GAME_STATES.PLAYING);\n    setIsTimerActive(true);\n  };\n  const pauseGame = () => {\n    setGameState(GAME_STATES.PAUSED);\n    setIsTimerActive(false);\n  };\n  const resumeGame = () => {\n    setGameState(GAME_STATES.PLAYING);\n    setIsTimerActive(true);\n  };\n  const stopGame = () => {\n    setGameState(GAME_STATES.FINISHED);\n    setIsTimerActive(false);\n  };\n  const resetGameState = () => {\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setCorrectAnswers(0);\n    setIncorrectAnswers(0);\n    setSelectedAnswer(null);\n    setShowResult(false);\n    setTimeElapsed(0);\n    setTimerReset(prev => prev + 1);\n    setError(null);\n  };\n  const handleTimeUp = () => {\n    if (gameState === GAME_STATES.PLAYING) {\n      stopGame();\n    }\n  };\n  const handleAnswer = answer => {\n    if (showResult) return;\n    const currentQuestion = questions[currentQuestionIndex];\n    const isCorrect = answer === currentQuestion.answer;\n    setSelectedAnswer(answer);\n    setShowResult(true);\n    if (isCorrect) {\n      setScore(prev => prev + 1);\n      setCorrectAnswers(prev => prev + 1);\n    } else {\n      setIncorrectAnswers(prev => prev + 1);\n    }\n\n    // Auto-advance to next question after 2 seconds\n    setTimeout(() => {\n      nextQuestion();\n    }, 2000);\n  };\n  const nextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n      setSelectedAnswer(null);\n      setShowResult(false);\n    } else {\n      stopGame();\n    }\n  };\n  const goToMainMenu = () => {\n    setGameState(GAME_STATES.MENU);\n    setIsTimerActive(false);\n    resetGameState();\n  };\n  const playAgain = () => {\n    resetGameState();\n    setGameState(GAME_STATES.PLAYING);\n    setIsTimerActive(true);\n  };\n  const reloadQuestions = () => {\n    loadQuestions();\n  };\n  const currentQuestion = questions[currentQuestionIndex];\n  const progress = questions.length > 0 ? (currentQuestionIndex + 1) / questions.length * 100 : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [gameState !== GAME_STATES.MENU && gameState !== GAME_STATES.FINISHED && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-display\",\n      children: [\"Score: \", score, \" / \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading questions...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: reloadQuestions,\n          style: {\n            marginLeft: '10px'\n          },\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), gameState === GAME_STATES.MENU && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83C\\uDFAF Jupyter Quiz Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Test your coding knowledge with our interactive quiz!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-stats\",\n          style: {\n            marginBottom: '2rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: questions.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Questions Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [timerDuration, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Time Limit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: \"Multiple Choice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Question Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: startGame,\n            disabled: questions.length === 0,\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: reloadQuestions,\n            children: \"Reload Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this), gameState === GAME_STATES.PLAYING && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Timer, {\n          duration: timerDuration,\n          onTimeUp: handleTimeUp,\n          isActive: isTimerActive,\n          onReset: timerReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: currentQuestionIndex + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: questions.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [Math.round(progress), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Question, {\n          question: currentQuestion,\n          onAnswer: handleAnswer,\n          showResult: showResult,\n          selectedAnswer: selectedAnswer,\n          correctAnswer: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: pauseGame,\n            children: \"Pause\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: stopGame,\n            children: \"Stop Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), gameState === GAME_STATES.PAUSED && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u23F8\\uFE0F Game Paused\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Take your time! Resume when you're ready.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Current Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: currentQuestionIndex + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: questions.length - currentQuestionIndex - 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Remaining\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: resumeGame,\n            children: \"Resume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: goToMainMenu,\n            children: \"Main Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: stopGame,\n            children: \"End Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this), gameState === GAME_STATES.FINISHED && /*#__PURE__*/_jsxDEV(Scoreboard, {\n        score: score,\n        totalQuestions: questions.length,\n        correctAnswers: correctAnswers,\n        incorrectAnswers: incorrectAnswers,\n        timeElapsed: timeElapsed,\n        onPlayAgain: playAgain,\n        onMainMenu: goToMainMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mznk9B6hPDYECboe5PHewjPj348=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Timer","Question","Scoreboard","quizService","jsxDEV","_jsxDEV","GAME_STATES","MENU","PLAYING","PAUSED","FINISHED","App","_s","gameState","setGameState","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","correctAnswers","setCorrectAnswers","incorrectAnswers","setIncorrectAnswers","selectedAnswer","setSelectedAnswer","showResult","setShowResult","loading","setLoading","error","setError","timeElapsed","setTimeElapsed","timerReset","setTimerReset","timerDuration","isTimerActive","setIsTimerActive","loadQuestions","intervalId","setInterval","prev","clearInterval","questionsData","getRandomQuestions","err","console","warn","getAllQuestions","length","getSampleQuestions","id","questionText","answer","codeSnippet","difficultyLevel","startGame","resetGameState","pauseGame","resumeGame","stopGame","handleTimeUp","handleAnswer","currentQuestion","isCorrect","setTimeout","nextQuestion","goToMainMenu","playAgain","reloadQuestions","progress","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginLeft","marginBottom","disabled","duration","onTimeUp","isActive","onReset","Math","round","question","onAnswer","correctAnswer","totalQuestions","onPlayAgain","onMainMenu","_c","$RefreshReg$"],"sources":["C:/Users/jcupp/coderepos/0code/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Timer from './components/Timer';\nimport Question from './components/Question';\nimport Scoreboard from './components/Scoreboard';\nimport quizService from './services/quizService';\nimport './index.css';\n\nconst GAME_STATES = {\n  MENU: 'menu',\n  PLAYING: 'playing',\n  PAUSED: 'paused',\n  FINISHED: 'finished'\n};\n\nfunction App() {\n  // Game state\n  const [gameState, setGameState] = useState(GAME_STATES.MENU);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [incorrectAnswers, setIncorrectAnswers] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [showResult, setShowResult] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [timerReset, setTimerReset] = useState(0);\n\n  // Timer state\n  const [timerDuration] = useState(60); // 60 seconds\n  const [isTimerActive, setIsTimerActive] = useState(false);\n\n  // Load questions when component mounts\n  useEffect(() => {\n    loadQuestions();\n  }, []);\n\n  // Timer effect for tracking elapsed time\n  useEffect(() => {\n    let intervalId;\n    \n    if (isTimerActive) {\n      intervalId = setInterval(() => {\n        setTimeElapsed(prev => prev + 1);\n      }, 1000);\n    }\n    \n    return () => clearInterval(intervalId);\n  }, [isTimerActive]);\n\n  const loadQuestions = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Try to get random questions, fallback to all questions if needed\n      let questionsData;\n      try {\n        questionsData = await quizService.getRandomQuestions(10);\n      } catch (err) {\n        console.warn('Random questions not available, trying all questions');\n        questionsData = await quizService.getAllQuestions();\n      }\n      \n      if (questionsData && questionsData.length > 0) {\n        setQuestions(questionsData);\n      } else {\n        // If no questions from API, use sample questions\n        setQuestions(getSampleQuestions());\n      }\n    } catch (err) {\n      console.error('Error loading questions:', err);\n      setError('Failed to load questions. Using sample questions.');\n      setQuestions(getSampleQuestions());\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getSampleQuestions = () => {\n    return [\n      {\n        id: 1,\n        questionText: 'print(\"Hello, World!\")\\\\nprint(\"Welcome to Python!\")',\n        answer: 'This code prints two lines of text to the console',\n        codeSnippet: 'print(\"Hello, World!\")\\nprint(\"Welcome to Python!\")',\n        difficultyLevel: 'BEGINNER'\n      },\n      {\n        id: 2,\n        questionText: 'for i in range(5):\\\\n    print(i)',\n        answer: 'This code prints numbers 0 through 4, each on a new line',\n        codeSnippet: 'for i in range(5):\\n    print(i)',\n        difficultyLevel: 'BEGINNER'\n      },\n      {\n        id: 3,\n        questionText: 'x = [1, 2, 3]\\\\ny = x\\\\ny.append(4)\\\\nprint(x)',\n        answer: 'This code prints [1, 2, 3, 4] because y and x reference the same list',\n        codeSnippet: 'x = [1, 2, 3]\\ny = x\\ny.append(4)\\nprint(x)',\n        difficultyLevel: 'INTERMEDIATE'\n      },\n      {\n        id: 4,\n        questionText: 'def factorial(n):\\\\n    if n <= 1:\\\\n        return 1\\\\n    return n * factorial(n-1)',\n        answer: 'This is a recursive function that calculates the factorial of a number',\n        codeSnippet: 'def factorial(n):\\n    if n <= 1:\\n        return 1\\n    return n * factorial(n-1)',\n        difficultyLevel: 'INTERMEDIATE'\n      },\n      {\n        id: 5,\n        questionText: 'import pandas as pd\\\\ndf = pd.DataFrame({\"A\": [1, 2], \"B\": [3, 4]})',\n        answer: 'This code creates a pandas DataFrame with two columns A and B',\n        codeSnippet: 'import pandas as pd\\ndf = pd.DataFrame({\"A\": [1, 2], \"B\": [3, 4]})',\n        difficultyLevel: 'ADVANCED'\n      }\n    ];\n  };\n\n  const startGame = () => {\n    if (questions.length === 0) {\n      setError('No questions available. Please load questions first.');\n      return;\n    }\n    \n    resetGameState();\n    setGameState(GAME_STATES.PLAYING);\n    setIsTimerActive(true);\n  };\n\n  const pauseGame = () => {\n    setGameState(GAME_STATES.PAUSED);\n    setIsTimerActive(false);\n  };\n\n  const resumeGame = () => {\n    setGameState(GAME_STATES.PLAYING);\n    setIsTimerActive(true);\n  };\n\n  const stopGame = () => {\n    setGameState(GAME_STATES.FINISHED);\n    setIsTimerActive(false);\n  };\n\n  const resetGameState = () => {\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setCorrectAnswers(0);\n    setIncorrectAnswers(0);\n    setSelectedAnswer(null);\n    setShowResult(false);\n    setTimeElapsed(0);\n    setTimerReset(prev => prev + 1);\n    setError(null);\n  };\n\n  const handleTimeUp = () => {\n    if (gameState === GAME_STATES.PLAYING) {\n      stopGame();\n    }\n  };\n\n  const handleAnswer = (answer) => {\n    if (showResult) return;\n\n    const currentQuestion = questions[currentQuestionIndex];\n    const isCorrect = answer === currentQuestion.answer;\n    \n    setSelectedAnswer(answer);\n    setShowResult(true);\n    \n    if (isCorrect) {\n      setScore(prev => prev + 1);\n      setCorrectAnswers(prev => prev + 1);\n    } else {\n      setIncorrectAnswers(prev => prev + 1);\n    }\n\n    // Auto-advance to next question after 2 seconds\n    setTimeout(() => {\n      nextQuestion();\n    }, 2000);\n  };\n\n  const nextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n      setSelectedAnswer(null);\n      setShowResult(false);\n    } else {\n      stopGame();\n    }\n  };\n\n  const goToMainMenu = () => {\n    setGameState(GAME_STATES.MENU);\n    setIsTimerActive(false);\n    resetGameState();\n  };\n\n  const playAgain = () => {\n    resetGameState();\n    setGameState(GAME_STATES.PLAYING);\n    setIsTimerActive(true);\n  };\n\n  const reloadQuestions = () => {\n    loadQuestions();\n  };\n\n  const currentQuestion = questions[currentQuestionIndex];\n  const progress = questions.length > 0 ? ((currentQuestionIndex + 1) / questions.length) * 100 : 0;\n\n  return (\n    <div className=\"App\">\n      {/* Score Display */}\n      {gameState !== GAME_STATES.MENU && gameState !== GAME_STATES.FINISHED && (\n        <div className=\"score-display\">\n          Score: {score} / {questions.length}\n        </div>\n      )}\n\n      <div className=\"game-container\">\n        {loading && (\n          <div className=\"loading\">\n            <div className=\"spinner\"></div>\n            <p>Loading questions...</p>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"error\">\n            {error}\n            <button className=\"btn btn-secondary\" onClick={reloadQuestions} style={{ marginLeft: '10px' }}>\n              Retry\n            </button>\n          </div>\n        )}\n\n        {/* Main Menu */}\n        {gameState === GAME_STATES.MENU && !loading && (\n          <div>\n            <h1>🎯 Jupyter Quiz Game</h1>\n            <p>Test your coding knowledge with our interactive quiz!</p>\n            \n            <div className=\"game-stats\" style={{ marginBottom: '2rem' }}>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{questions.length}</span>\n                <span className=\"stat-label\">Questions Available</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{timerDuration}s</span>\n                <span className=\"stat-label\">Time Limit</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">Multiple Choice</span>\n                <span className=\"stat-label\">Question Type</span>\n              </div>\n            </div>\n\n            <div className=\"game-controls\">\n              <button \n                className=\"btn btn-primary\" \n                onClick={startGame}\n                disabled={questions.length === 0}\n              >\n                Start Game\n              </button>\n              <button className=\"btn btn-secondary\" onClick={reloadQuestions}>\n                Reload Questions\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Game Playing */}\n        {gameState === GAME_STATES.PLAYING && !loading && (\n          <div>\n            <Timer \n              duration={timerDuration}\n              onTimeUp={handleTimeUp}\n              isActive={isTimerActive}\n              onReset={timerReset}\n            />\n\n            <div className=\"game-stats\">\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{currentQuestionIndex + 1}</span>\n                <span className=\"stat-label\">Question</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{questions.length}</span>\n                <span className=\"stat-label\">Total</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{Math.round(progress)}%</span>\n                <span className=\"stat-label\">Progress</span>\n              </div>\n            </div>\n\n            <Question\n              question={currentQuestion}\n              onAnswer={handleAnswer}\n              showResult={showResult}\n              selectedAnswer={selectedAnswer}\n              correctAnswer={currentQuestion?.answer}\n            />\n\n            <div className=\"game-controls\">\n              <button className=\"btn btn-secondary\" onClick={pauseGame}>\n                Pause\n              </button>\n              <button className=\"btn btn-danger\" onClick={stopGame}>\n                Stop Game\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Game Paused */}\n        {gameState === GAME_STATES.PAUSED && (\n          <div>\n            <h2>⏸️ Game Paused</h2>\n            <p>Take your time! Resume when you're ready.</p>\n            \n            <div className=\"game-stats\">\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{score}</span>\n                <span className=\"stat-label\">Current Score</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{currentQuestionIndex + 1}</span>\n                <span className=\"stat-label\">Question</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{questions.length - currentQuestionIndex - 1}</span>\n                <span className=\"stat-label\">Remaining</span>\n              </div>\n            </div>\n\n            <div className=\"game-controls\">\n              <button className=\"btn btn-primary\" onClick={resumeGame}>\n                Resume\n              </button>\n              <button className=\"btn btn-secondary\" onClick={goToMainMenu}>\n                Main Menu\n              </button>\n              <button className=\"btn btn-danger\" onClick={stopGame}>\n                End Game\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Game Finished - Scoreboard */}\n        {gameState === GAME_STATES.FINISHED && (\n          <Scoreboard\n            score={score}\n            totalQuestions={questions.length}\n            correctAnswers={correctAnswers}\n            incorrectAnswers={incorrectAnswers}\n            timeElapsed={timeElapsed}\n            onPlayAgain={playAgain}\n            onMainMenu={goToMainMenu}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}