{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Scoreboard=_ref=>{let{score,totalQuestions,correctAnswers,incorrectAnswers,timeElapsed,onPlayAgain,onMainMenu}=_ref;const percentage=totalQuestions>0?Math.round(score/totalQuestions*100):0;const accuracy=correctAnswers>0?Math.round(correctAnswers/(correctAnswers+incorrectAnswers)*100):0;const getScoreMessage=()=>{if(percentage>=90)return'🏆 Excellent!';if(percentage>=75)return'🎉 Great job!';if(percentage>=60)return'👍 Good work!';if(percentage>=40)return'📚 Keep studying!';return'💪 Practice makes perfect!';};const formatTime=seconds=>{const mins=Math.floor(seconds/60);const secs=seconds%60;return\"\".concat(mins,\":\").concat(secs.toString().padStart(2,'0'));};return/*#__PURE__*/_jsxs(\"div\",{className:\"scoreboard\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83C\\uDFAF Game Complete!\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"final-score\",children:[score,\" / \",totalQuestions]}),/*#__PURE__*/_jsx(\"div\",{className:\"success\",children:getScoreMessage()}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"score-stat\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Accuracy:\"}),/*#__PURE__*/_jsxs(\"strong\",{children:[percentage,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-stat\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Correct Answers:\"}),/*#__PURE__*/_jsx(\"strong\",{style:{color:'#28a745'},children:correctAnswers})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-stat\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Incorrect Answers:\"}),/*#__PURE__*/_jsx(\"strong\",{style:{color:'#dc3545'},children:incorrectAnswers})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-stat\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Time Elapsed:\"}),/*#__PURE__*/_jsx(\"strong\",{children:formatTime(timeElapsed)})]}),totalQuestions>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"score-stat\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Average Time per Question:\"}),/*#__PURE__*/_jsx(\"strong\",{children:formatTime(Math.round(timeElapsed/totalQuestions))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[percentage,\"%\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Score\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:correctAnswers}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Correct\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:incorrectAnswers}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Wrong\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:onPlayAgain,children:\"Play Again\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:onMainMenu,children:\"Main Menu\"})]})]});};export default Scoreboard;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Scoreboard","_ref","score","totalQuestions","correctAnswers","incorrectAnswers","timeElapsed","onPlayAgain","onMainMenu","percentage","Math","round","accuracy","getScoreMessage","formatTime","seconds","mins","floor","secs","concat","toString","padStart","className","children","style","color","onClick"],"sources":["C:/Users/jcupp/coderepos/0code/frontend/src/components/Scoreboard.js"],"sourcesContent":["import React from 'react';\n\nconst Scoreboard = ({ \n  score, \n  totalQuestions, \n  correctAnswers, \n  incorrectAnswers, \n  timeElapsed,\n  onPlayAgain,\n  onMainMenu \n}) => {\n  const percentage = totalQuestions > 0 ? Math.round((score / totalQuestions) * 100) : 0;\n  const accuracy = correctAnswers > 0 ? Math.round((correctAnswers / (correctAnswers + incorrectAnswers)) * 100) : 0;\n\n  const getScoreMessage = () => {\n    if (percentage >= 90) return '🏆 Excellent!';\n    if (percentage >= 75) return '🎉 Great job!';\n    if (percentage >= 60) return '👍 Good work!';\n    if (percentage >= 40) return '📚 Keep studying!';\n    return '💪 Practice makes perfect!';\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"scoreboard\">\n      <h2>🎯 Game Complete!</h2>\n      \n      <div className=\"final-score\">\n        {score} / {totalQuestions}\n      </div>\n      \n      <div className=\"success\">\n        {getScoreMessage()}\n      </div>\n      \n      <div className=\"score-details\">\n        <div className=\"score-stat\">\n          <span>Accuracy:</span>\n          <strong>{percentage}%</strong>\n        </div>\n        \n        <div className=\"score-stat\">\n          <span>Correct Answers:</span>\n          <strong style={{ color: '#28a745' }}>{correctAnswers}</strong>\n        </div>\n        \n        <div className=\"score-stat\">\n          <span>Incorrect Answers:</span>\n          <strong style={{ color: '#dc3545' }}>{incorrectAnswers}</strong>\n        </div>\n        \n        <div className=\"score-stat\">\n          <span>Time Elapsed:</span>\n          <strong>{formatTime(timeElapsed)}</strong>\n        </div>\n        \n        {totalQuestions > 0 && (\n          <div className=\"score-stat\">\n            <span>Average Time per Question:</span>\n            <strong>{formatTime(Math.round(timeElapsed / totalQuestions))}</strong>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"game-stats\">\n        <div className=\"stat-item\">\n          <span className=\"stat-value\">{percentage}%</span>\n          <span className=\"stat-label\">Score</span>\n        </div>\n        \n        <div className=\"stat-item\">\n          <span className=\"stat-value\">{correctAnswers}</span>\n          <span className=\"stat-label\">Correct</span>\n        </div>\n        \n        <div className=\"stat-item\">\n          <span className=\"stat-value\">{incorrectAnswers}</span>\n          <span className=\"stat-label\">Wrong</span>\n        </div>\n      </div>\n      \n      <div className=\"game-controls\">\n        <button className=\"btn btn-primary\" onClick={onPlayAgain}>\n          Play Again\n        </button>\n        <button className=\"btn btn-secondary\" onClick={onMainMenu}>\n          Main Menu\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Scoreboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}