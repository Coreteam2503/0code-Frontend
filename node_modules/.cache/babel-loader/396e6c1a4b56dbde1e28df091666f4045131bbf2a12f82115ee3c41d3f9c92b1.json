{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jcupp\\\\coderepos\\\\0code\\\\frontend\\\\src\\\\components\\\\Question.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = ({\n  question,\n  onAnswer,\n  showResult = false,\n  selectedAnswer = null,\n  correctAnswer = null\n}) => {\n  _s();\n  const [selected, setSelected] = useState(selectedAnswer);\n  useEffect(() => {\n    setSelected(selectedAnswer);\n  }, [selectedAnswer]);\n  if (!question) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Generate multiple choice options based on the correct answer\n  const generateChoices = (correctAnswer, questionText) => {\n    if (!correctAnswer) return [];\n\n    // For \"What does this mean?\" type questions, we'll create plausible alternatives\n    const choices = [correctAnswer];\n\n    // Add some generic wrong answers for demonstration\n    // In a real implementation, you might want to generate these more intelligently\n    const wrongAnswers = ['A syntax error in the code', 'A runtime exception', 'A deprecated method call', 'An undefined variable reference', 'A memory allocation issue', 'A type conversion error'].filter(answer => answer !== correctAnswer);\n\n    // Add 3 random wrong answers\n    while (choices.length < 4 && wrongAnswers.length > 0) {\n      const randomIndex = Math.floor(Math.random() * wrongAnswers.length);\n      choices.push(wrongAnswers.splice(randomIndex, 1)[0]);\n    }\n\n    // Shuffle the choices\n    return choices.sort(() => Math.random() - 0.5);\n  };\n  const choices = generateChoices(question.answer, question.questionText);\n  const handleChoiceClick = choice => {\n    if (showResult) return; // Don't allow selection if showing results\n\n    setSelected(choice);\n    onAnswer(choice);\n  };\n  const getChoiceClass = choice => {\n    let className = 'choice-btn';\n    if (selected === choice) {\n      className += ' selected';\n    }\n    if (showResult) {\n      if (choice === correctAnswer) {\n        className += ' correct';\n      } else if (choice === selected && choice !== correctAnswer) {\n        className += ' incorrect';\n      }\n    }\n    return className;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"What does this mean?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), question.questionText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), question.codeSnippet && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-snippet\",\n      children: question.codeSnippet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"choices-container\",\n      children: choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: getChoiceClass(choice),\n        onClick: () => handleChoiceClick(choice),\n        disabled: showResult,\n        children: [String.fromCharCode(65 + index), \". \", choice]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem',\n        textAlign: 'center'\n      },\n      children: selected === correctAnswer ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success\",\n        children: \"\\u2713 Correct!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [\"\\u2717 Incorrect. The correct answer was: \", correctAnswer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Question, \"Vm0UX0gNAzcFLCdCh9hHsw0O7Ds=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Question","question","onAnswer","showResult","selectedAnswer","correctAnswer","_s","selected","setSelected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","generateChoices","questionText","choices","wrongAnswers","filter","answer","length","randomIndex","Math","floor","random","push","splice","sort","handleChoiceClick","choice","getChoiceClass","codeSnippet","map","index","onClick","disabled","String","fromCharCode","style","marginTop","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/jcupp/coderepos/0code/frontend/src/components/Question.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Question = ({ \n  question, \n  onAnswer, \n  showResult = false, \n  selectedAnswer = null,\n  correctAnswer = null \n}) => {\n  const [selected, setSelected] = useState(selectedAnswer);\n  \n  useEffect(() => {\n    setSelected(selectedAnswer);\n  }, [selectedAnswer]);\n\n  if (!question) {\n    return (\n      <div className=\"question-container\">\n        <div className=\"loading\">\n          <div className=\"spinner\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  // Generate multiple choice options based on the correct answer\n  const generateChoices = (correctAnswer, questionText) => {\n    if (!correctAnswer) return [];\n\n    // For \"What does this mean?\" type questions, we'll create plausible alternatives\n    const choices = [correctAnswer];\n    \n    // Add some generic wrong answers for demonstration\n    // In a real implementation, you might want to generate these more intelligently\n    const wrongAnswers = [\n      'A syntax error in the code',\n      'A runtime exception',\n      'A deprecated method call',\n      'An undefined variable reference',\n      'A memory allocation issue',\n      'A type conversion error'\n    ].filter(answer => answer !== correctAnswer);\n\n    // Add 3 random wrong answers\n    while (choices.length < 4 && wrongAnswers.length > 0) {\n      const randomIndex = Math.floor(Math.random() * wrongAnswers.length);\n      choices.push(wrongAnswers.splice(randomIndex, 1)[0]);\n    }\n\n    // Shuffle the choices\n    return choices.sort(() => Math.random() - 0.5);\n  };\n\n  const choices = generateChoices(question.answer, question.questionText);\n\n  const handleChoiceClick = (choice) => {\n    if (showResult) return; // Don't allow selection if showing results\n    \n    setSelected(choice);\n    onAnswer(choice);\n  };\n\n  const getChoiceClass = (choice) => {\n    let className = 'choice-btn';\n    \n    if (selected === choice) {\n      className += ' selected';\n    }\n    \n    if (showResult) {\n      if (choice === correctAnswer) {\n        className += ' correct';\n      } else if (choice === selected && choice !== correctAnswer) {\n        className += ' incorrect';\n      }\n    }\n    \n    return className;\n  };\n\n  return (\n    <div className=\"question-container\">\n      <div className=\"question-text\">\n        <strong>What does this mean?</strong>\n        <br />\n        {question.questionText}\n      </div>\n      \n      {question.codeSnippet && (\n        <div className=\"code-snippet\">\n          {question.codeSnippet}\n        </div>\n      )}\n      \n      <div className=\"choices-container\">\n        {choices.map((choice, index) => (\n          <button\n            key={index}\n            className={getChoiceClass(choice)}\n            onClick={() => handleChoiceClick(choice)}\n            disabled={showResult}\n          >\n            {String.fromCharCode(65 + index)}. {choice}\n          </button>\n        ))}\n      </div>\n      \n      {showResult && (\n        <div style={{ marginTop: '1rem', textAlign: 'center' }}>\n          {selected === correctAnswer ? (\n            <div className=\"success\">✓ Correct!</div>\n          ) : (\n            <div className=\"error\">✗ Incorrect. The correct answer was: {correctAnswer}</div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Question;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}