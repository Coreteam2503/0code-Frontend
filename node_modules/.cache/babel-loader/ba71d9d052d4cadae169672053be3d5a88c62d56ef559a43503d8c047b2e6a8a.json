{"ast":null,"code":"import React,{useState,useEffect}from'react';import Timer from'./components/Timer';import Question from'./components/Question';import Scoreboard from'./components/Scoreboard';import quizService from'./services/quizService';import'./index.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const GAME_STATES={MENU:'menu',PLAYING:'playing',PAUSED:'paused',FINISHED:'finished'};function App(){// Game state\nconst[gameState,setGameState]=useState(GAME_STATES.MENU);const[questions,setQuestions]=useState([]);const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[score,setScore]=useState(0);const[correctAnswers,setCorrectAnswers]=useState(0);const[incorrectAnswers,setIncorrectAnswers]=useState(0);const[selectedAnswer,setSelectedAnswer]=useState(null);const[showResult,setShowResult]=useState(false);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[timeElapsed,setTimeElapsed]=useState(0);const[timerReset,setTimerReset]=useState(0);// Timer state\nconst[timerDuration]=useState(60);// 60 seconds\nconst[isTimerActive,setIsTimerActive]=useState(false);// Load questions when component mounts\nuseEffect(()=>{loadQuestions();},[]);// Timer effect for tracking elapsed time\nuseEffect(()=>{let intervalId;if(isTimerActive){intervalId=setInterval(()=>{setTimeElapsed(prev=>prev+1);},1000);}return()=>clearInterval(intervalId);},[isTimerActive]);const loadQuestions=async()=>{try{setLoading(true);setError(null);// Try to get random questions, fallback to all questions if needed\nlet questionsData;try{questionsData=await quizService.getRandomQuestions(10);}catch(err){console.warn('Random questions not available, trying all questions');questionsData=await quizService.getAllQuestions();}if(questionsData&&questionsData.length>0){setQuestions(questionsData);}else{// If no questions from API, use sample questions\nsetQuestions(getSampleQuestions());}}catch(err){console.error('Error loading questions:',err);setError('Failed to load questions. Using sample questions.');setQuestions(getSampleQuestions());}finally{setLoading(false);}};const getSampleQuestions=()=>{return[{id:1,questionText:'print(\"Hello, World!\")\\\\nprint(\"Welcome to Python!\")',answer:'This code prints two lines of text to the console',codeSnippet:'print(\"Hello, World!\")\\nprint(\"Welcome to Python!\")',difficultyLevel:'BEGINNER'},{id:2,questionText:'for i in range(5):\\\\n    print(i)',answer:'This code prints numbers 0 through 4, each on a new line',codeSnippet:'for i in range(5):\\n    print(i)',difficultyLevel:'BEGINNER'},{id:3,questionText:'x = [1, 2, 3]\\\\ny = x\\\\ny.append(4)\\\\nprint(x)',answer:'This code prints [1, 2, 3, 4] because y and x reference the same list',codeSnippet:'x = [1, 2, 3]\\ny = x\\ny.append(4)\\nprint(x)',difficultyLevel:'INTERMEDIATE'},{id:4,questionText:'def factorial(n):\\\\n    if n <= 1:\\\\n        return 1\\\\n    return n * factorial(n-1)',answer:'This is a recursive function that calculates the factorial of a number',codeSnippet:'def factorial(n):\\n    if n <= 1:\\n        return 1\\n    return n * factorial(n-1)',difficultyLevel:'INTERMEDIATE'},{id:5,questionText:'import pandas as pd\\\\ndf = pd.DataFrame({\"A\": [1, 2], \"B\": [3, 4]})',answer:'This code creates a pandas DataFrame with two columns A and B',codeSnippet:'import pandas as pd\\ndf = pd.DataFrame({\"A\": [1, 2], \"B\": [3, 4]})',difficultyLevel:'ADVANCED'}];};const startGame=()=>{if(questions.length===0){setError('No questions available. Please load questions first.');return;}resetGameState();setGameState(GAME_STATES.PLAYING);setIsTimerActive(true);};const pauseGame=()=>{setGameState(GAME_STATES.PAUSED);setIsTimerActive(false);};const resumeGame=()=>{setGameState(GAME_STATES.PLAYING);setIsTimerActive(true);};const stopGame=()=>{setGameState(GAME_STATES.FINISHED);setIsTimerActive(false);};const resetGameState=()=>{setCurrentQuestionIndex(0);setScore(0);setCorrectAnswers(0);setIncorrectAnswers(0);setSelectedAnswer(null);setShowResult(false);setTimeElapsed(0);setTimerReset(prev=>prev+1);setError(null);};const handleTimeUp=()=>{if(gameState===GAME_STATES.PLAYING){stopGame();}};const handleAnswer=answer=>{if(showResult)return;const currentQuestion=questions[currentQuestionIndex];const isCorrect=answer===currentQuestion.answer;setSelectedAnswer(answer);setShowResult(true);if(isCorrect){setScore(prev=>prev+1);setCorrectAnswers(prev=>prev+1);}else{setIncorrectAnswers(prev=>prev+1);}// Auto-advance to next question after 2 seconds\nsetTimeout(()=>{nextQuestion();},2000);};const nextQuestion=()=>{if(currentQuestionIndex<questions.length-1){setCurrentQuestionIndex(prev=>prev+1);setSelectedAnswer(null);setShowResult(false);}else{stopGame();}};const goToMainMenu=()=>{setGameState(GAME_STATES.MENU);setIsTimerActive(false);resetGameState();};const playAgain=()=>{resetGameState();setGameState(GAME_STATES.PLAYING);setIsTimerActive(true);};const reloadQuestions=()=>{loadQuestions();};const currentQuestion=questions[currentQuestionIndex];const progress=questions.length>0?(currentQuestionIndex+1)/questions.length*100:0;return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[gameState!==GAME_STATES.MENU&&gameState!==GAME_STATES.FINISHED&&/*#__PURE__*/_jsxs(\"div\",{className:\"score-display\",children:[\"Score: \",score,\" / \",questions.length]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-container\",children:[loading&&/*#__PURE__*/_jsxs(\"div\",{className:\"loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading questions...\"})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error\",children:[error,/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:reloadQuestions,style:{marginLeft:'10px'},children:\"Retry\"})]}),gameState===GAME_STATES.MENU&&!loading&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83C\\uDFAF Jupyter Quiz Game\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Test your coding knowledge with our interactive quiz!\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-stats\",style:{marginBottom:'2rem'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:questions.length}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Questions Available\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[timerDuration,\"s\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Time Limit\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:\"Multiple Choice\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Question Type\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:startGame,disabled:questions.length===0,children:\"Start Game\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:reloadQuestions,children:\"Reload Questions\"})]})]}),gameState===GAME_STATES.PLAYING&&!loading&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Timer,{duration:timerDuration,onTimeUp:handleTimeUp,isActive:isTimerActive,onReset:timerReset}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:currentQuestionIndex+1}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Question\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:questions.length}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Total\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[Math.round(progress),\"%\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Progress\"})]})]}),/*#__PURE__*/_jsx(Question,{question:currentQuestion,onAnswer:handleAnswer,showResult:showResult,selectedAnswer:selectedAnswer,correctAnswer:currentQuestion===null||currentQuestion===void 0?void 0:currentQuestion.answer}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:pauseGame,children:\"Pause\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:stopGame,children:\"Stop Game\"})]})]}),gameState===GAME_STATES.PAUSED&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u23F8\\uFE0F Game Paused\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Take your time! Resume when you're ready.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:score}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Current Score\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:currentQuestionIndex+1}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Question\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:questions.length-currentQuestionIndex-1}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Remaining\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:resumeGame,children:\"Resume\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:goToMainMenu,children:\"Main Menu\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:stopGame,children:\"End Game\"})]})]}),gameState===GAME_STATES.FINISHED&&/*#__PURE__*/_jsx(Scoreboard,{score:score,totalQuestions:questions.length,correctAnswers:correctAnswers,incorrectAnswers:incorrectAnswers,timeElapsed:timeElapsed,onPlayAgain:playAgain,onMainMenu:goToMainMenu})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Timer","Question","Scoreboard","quizService","jsxs","_jsxs","jsx","_jsx","GAME_STATES","MENU","PLAYING","PAUSED","FINISHED","App","gameState","setGameState","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","correctAnswers","setCorrectAnswers","incorrectAnswers","setIncorrectAnswers","selectedAnswer","setSelectedAnswer","showResult","setShowResult","loading","setLoading","error","setError","timeElapsed","setTimeElapsed","timerReset","setTimerReset","timerDuration","isTimerActive","setIsTimerActive","loadQuestions","intervalId","setInterval","prev","clearInterval","questionsData","getRandomQuestions","err","console","warn","getAllQuestions","length","getSampleQuestions","id","questionText","answer","codeSnippet","difficultyLevel","startGame","resetGameState","pauseGame","resumeGame","stopGame","handleTimeUp","handleAnswer","currentQuestion","isCorrect","setTimeout","nextQuestion","goToMainMenu","playAgain","reloadQuestions","progress","className","children","onClick","style","marginLeft","marginBottom","disabled","duration","onTimeUp","isActive","onReset","Math","round","question","onAnswer","correctAnswer","totalQuestions","onPlayAgain","onMainMenu"],"sources":["C:/Users/jcupp/coderepos/0code/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Timer from './components/Timer';\nimport Question from './components/Question';\nimport Scoreboard from './components/Scoreboard';\nimport quizService from './services/quizService';\nimport './index.css';\n\nconst GAME_STATES = {\n  MENU: 'menu',\n  PLAYING: 'playing',\n  PAUSED: 'paused',\n  FINISHED: 'finished'\n};\n\nfunction App() {\n  // Game state\n  const [gameState, setGameState] = useState(GAME_STATES.MENU);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [incorrectAnswers, setIncorrectAnswers] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [showResult, setShowResult] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [timerReset, setTimerReset] = useState(0);\n\n  // Timer state\n  const [timerDuration] = useState(60); // 60 seconds\n  const [isTimerActive, setIsTimerActive] = useState(false);\n\n  // Load questions when component mounts\n  useEffect(() => {\n    loadQuestions();\n  }, []);\n\n  // Timer effect for tracking elapsed time\n  useEffect(() => {\n    let intervalId;\n    \n    if (isTimerActive) {\n      intervalId = setInterval(() => {\n        setTimeElapsed(prev => prev + 1);\n      }, 1000);\n    }\n    \n    return () => clearInterval(intervalId);\n  }, [isTimerActive]);\n\n  const loadQuestions = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Try to get random questions, fallback to all questions if needed\n      let questionsData;\n      try {\n        questionsData = await quizService.getRandomQuestions(10);\n      } catch (err) {\n        console.warn('Random questions not available, trying all questions');\n        questionsData = await quizService.getAllQuestions();\n      }\n      \n      if (questionsData && questionsData.length > 0) {\n        setQuestions(questionsData);\n      } else {\n        // If no questions from API, use sample questions\n        setQuestions(getSampleQuestions());\n      }\n    } catch (err) {\n      console.error('Error loading questions:', err);\n      setError('Failed to load questions. Using sample questions.');\n      setQuestions(getSampleQuestions());\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getSampleQuestions = () => {\n    return [\n      {\n        id: 1,\n        questionText: 'print(\"Hello, World!\")\\\\nprint(\"Welcome to Python!\")',\n        answer: 'This code prints two lines of text to the console',\n        codeSnippet: 'print(\"Hello, World!\")\\nprint(\"Welcome to Python!\")',\n        difficultyLevel: 'BEGINNER'\n      },\n      {\n        id: 2,\n        questionText: 'for i in range(5):\\\\n    print(i)',\n        answer: 'This code prints numbers 0 through 4, each on a new line',\n        codeSnippet: 'for i in range(5):\\n    print(i)',\n        difficultyLevel: 'BEGINNER'\n      },\n      {\n        id: 3,\n        questionText: 'x = [1, 2, 3]\\\\ny = x\\\\ny.append(4)\\\\nprint(x)',\n        answer: 'This code prints [1, 2, 3, 4] because y and x reference the same list',\n        codeSnippet: 'x = [1, 2, 3]\\ny = x\\ny.append(4)\\nprint(x)',\n        difficultyLevel: 'INTERMEDIATE'\n      },\n      {\n        id: 4,\n        questionText: 'def factorial(n):\\\\n    if n <= 1:\\\\n        return 1\\\\n    return n * factorial(n-1)',\n        answer: 'This is a recursive function that calculates the factorial of a number',\n        codeSnippet: 'def factorial(n):\\n    if n <= 1:\\n        return 1\\n    return n * factorial(n-1)',\n        difficultyLevel: 'INTERMEDIATE'\n      },\n      {\n        id: 5,\n        questionText: 'import pandas as pd\\\\ndf = pd.DataFrame({\"A\": [1, 2], \"B\": [3, 4]})',\n        answer: 'This code creates a pandas DataFrame with two columns A and B',\n        codeSnippet: 'import pandas as pd\\ndf = pd.DataFrame({\"A\": [1, 2], \"B\": [3, 4]})',\n        difficultyLevel: 'ADVANCED'\n      }\n    ];\n  };\n\n  const startGame = () => {\n    if (questions.length === 0) {\n      setError('No questions available. Please load questions first.');\n      return;\n    }\n    \n    resetGameState();\n    setGameState(GAME_STATES.PLAYING);\n    setIsTimerActive(true);\n  };\n\n  const pauseGame = () => {\n    setGameState(GAME_STATES.PAUSED);\n    setIsTimerActive(false);\n  };\n\n  const resumeGame = () => {\n    setGameState(GAME_STATES.PLAYING);\n    setIsTimerActive(true);\n  };\n\n  const stopGame = () => {\n    setGameState(GAME_STATES.FINISHED);\n    setIsTimerActive(false);\n  };\n\n  const resetGameState = () => {\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setCorrectAnswers(0);\n    setIncorrectAnswers(0);\n    setSelectedAnswer(null);\n    setShowResult(false);\n    setTimeElapsed(0);\n    setTimerReset(prev => prev + 1);\n    setError(null);\n  };\n\n  const handleTimeUp = () => {\n    if (gameState === GAME_STATES.PLAYING) {\n      stopGame();\n    }\n  };\n\n  const handleAnswer = (answer) => {\n    if (showResult) return;\n\n    const currentQuestion = questions[currentQuestionIndex];\n    const isCorrect = answer === currentQuestion.answer;\n    \n    setSelectedAnswer(answer);\n    setShowResult(true);\n    \n    if (isCorrect) {\n      setScore(prev => prev + 1);\n      setCorrectAnswers(prev => prev + 1);\n    } else {\n      setIncorrectAnswers(prev => prev + 1);\n    }\n\n    // Auto-advance to next question after 2 seconds\n    setTimeout(() => {\n      nextQuestion();\n    }, 2000);\n  };\n\n  const nextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n      setSelectedAnswer(null);\n      setShowResult(false);\n    } else {\n      stopGame();\n    }\n  };\n\n  const goToMainMenu = () => {\n    setGameState(GAME_STATES.MENU);\n    setIsTimerActive(false);\n    resetGameState();\n  };\n\n  const playAgain = () => {\n    resetGameState();\n    setGameState(GAME_STATES.PLAYING);\n    setIsTimerActive(true);\n  };\n\n  const reloadQuestions = () => {\n    loadQuestions();\n  };\n\n  const currentQuestion = questions[currentQuestionIndex];\n  const progress = questions.length > 0 ? ((currentQuestionIndex + 1) / questions.length) * 100 : 0;\n\n  return (\n    <div className=\"App\">\n      {/* Score Display */}\n      {gameState !== GAME_STATES.MENU && gameState !== GAME_STATES.FINISHED && (\n        <div className=\"score-display\">\n          Score: {score} / {questions.length}\n        </div>\n      )}\n\n      <div className=\"game-container\">\n        {loading && (\n          <div className=\"loading\">\n            <div className=\"spinner\"></div>\n            <p>Loading questions...</p>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"error\">\n            {error}\n            <button className=\"btn btn-secondary\" onClick={reloadQuestions} style={{ marginLeft: '10px' }}>\n              Retry\n            </button>\n          </div>\n        )}\n\n        {/* Main Menu */}\n        {gameState === GAME_STATES.MENU && !loading && (\n          <div>\n            <h1>🎯 Jupyter Quiz Game</h1>\n            <p>Test your coding knowledge with our interactive quiz!</p>\n            \n            <div className=\"game-stats\" style={{ marginBottom: '2rem' }}>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{questions.length}</span>\n                <span className=\"stat-label\">Questions Available</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{timerDuration}s</span>\n                <span className=\"stat-label\">Time Limit</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">Multiple Choice</span>\n                <span className=\"stat-label\">Question Type</span>\n              </div>\n            </div>\n\n            <div className=\"game-controls\">\n              <button \n                className=\"btn btn-primary\" \n                onClick={startGame}\n                disabled={questions.length === 0}\n              >\n                Start Game\n              </button>\n              <button className=\"btn btn-secondary\" onClick={reloadQuestions}>\n                Reload Questions\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Game Playing */}\n        {gameState === GAME_STATES.PLAYING && !loading && (\n          <div>\n            <Timer \n              duration={timerDuration}\n              onTimeUp={handleTimeUp}\n              isActive={isTimerActive}\n              onReset={timerReset}\n            />\n\n            <div className=\"game-stats\">\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{currentQuestionIndex + 1}</span>\n                <span className=\"stat-label\">Question</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{questions.length}</span>\n                <span className=\"stat-label\">Total</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{Math.round(progress)}%</span>\n                <span className=\"stat-label\">Progress</span>\n              </div>\n            </div>\n\n            <Question\n              question={currentQuestion}\n              onAnswer={handleAnswer}\n              showResult={showResult}\n              selectedAnswer={selectedAnswer}\n              correctAnswer={currentQuestion?.answer}\n            />\n\n            <div className=\"game-controls\">\n              <button className=\"btn btn-secondary\" onClick={pauseGame}>\n                Pause\n              </button>\n              <button className=\"btn btn-danger\" onClick={stopGame}>\n                Stop Game\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Game Paused */}\n        {gameState === GAME_STATES.PAUSED && (\n          <div>\n            <h2>⏸️ Game Paused</h2>\n            <p>Take your time! Resume when you're ready.</p>\n            \n            <div className=\"game-stats\">\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{score}</span>\n                <span className=\"stat-label\">Current Score</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{currentQuestionIndex + 1}</span>\n                <span className=\"stat-label\">Question</span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-value\">{questions.length - currentQuestionIndex - 1}</span>\n                <span className=\"stat-label\">Remaining</span>\n              </div>\n            </div>\n\n            <div className=\"game-controls\">\n              <button className=\"btn btn-primary\" onClick={resumeGame}>\n                Resume\n              </button>\n              <button className=\"btn btn-secondary\" onClick={goToMainMenu}>\n                Main Menu\n              </button>\n              <button className=\"btn btn-danger\" onClick={stopGame}>\n                End Game\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Game Finished - Scoreboard */}\n        {gameState === GAME_STATES.FINISHED && (\n          <Scoreboard\n            score={score}\n            totalQuestions={questions.length}\n            correctAnswers={correctAnswers}\n            incorrectAnswers={incorrectAnswers}\n            timeElapsed={timeElapsed}\n            onPlayAgain={playAgain}\n            onMainMenu={goToMainMenu}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,WAAW,KAAM,wBAAwB,CAChD,MAAO,aAAa,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAErB,KAAM,CAAAC,WAAW,CAAG,CAClBC,IAAI,CAAE,MAAM,CACZC,OAAO,CAAE,SAAS,CAClBC,MAAM,CAAE,QAAQ,CAChBC,QAAQ,CAAE,UACZ,CAAC,CAED,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb;AACA,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGjB,QAAQ,CAACU,WAAW,CAACC,IAAI,CAAC,CAC5D,KAAM,CAACO,SAAS,CAAEC,YAAY,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACoB,oBAAoB,CAAEC,uBAAuB,CAAC,CAAGrB,QAAQ,CAAC,CAAC,CAAC,CACnE,KAAM,CAACsB,KAAK,CAAEC,QAAQ,CAAC,CAAGvB,QAAQ,CAAC,CAAC,CAAC,CACrC,KAAM,CAACwB,cAAc,CAAEC,iBAAiB,CAAC,CAAGzB,QAAQ,CAAC,CAAC,CAAC,CACvD,KAAM,CAAC0B,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG3B,QAAQ,CAAC,CAAC,CAAC,CAC3D,KAAM,CAAC4B,cAAc,CAAEC,iBAAiB,CAAC,CAAG7B,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAAC8B,UAAU,CAAEC,aAAa,CAAC,CAAG/B,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACgC,OAAO,CAAEC,UAAU,CAAC,CAAGjC,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACkC,KAAK,CAAEC,QAAQ,CAAC,CAAGnC,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACoC,WAAW,CAAEC,cAAc,CAAC,CAAGrC,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAACsC,UAAU,CAAEC,aAAa,CAAC,CAAGvC,QAAQ,CAAC,CAAC,CAAC,CAE/C;AACA,KAAM,CAACwC,aAAa,CAAC,CAAGxC,QAAQ,CAAC,EAAE,CAAC,CAAE;AACtC,KAAM,CAACyC,aAAa,CAAEC,gBAAgB,CAAC,CAAG1C,QAAQ,CAAC,KAAK,CAAC,CAEzD;AACAC,SAAS,CAAC,IAAM,CACd0C,aAAa,CAAC,CAAC,CACjB,CAAC,CAAE,EAAE,CAAC,CAEN;AACA1C,SAAS,CAAC,IAAM,CACd,GAAI,CAAA2C,UAAU,CAEd,GAAIH,aAAa,CAAE,CACjBG,UAAU,CAAGC,WAAW,CAAC,IAAM,CAC7BR,cAAc,CAACS,IAAI,EAAIA,IAAI,CAAG,CAAC,CAAC,CAClC,CAAC,CAAE,IAAI,CAAC,CACV,CAEA,MAAO,IAAMC,aAAa,CAACH,UAAU,CAAC,CACxC,CAAC,CAAE,CAACH,aAAa,CAAC,CAAC,CAEnB,KAAM,CAAAE,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACFV,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CAEd;AACA,GAAI,CAAAa,aAAa,CACjB,GAAI,CACFA,aAAa,CAAG,KAAM,CAAA3C,WAAW,CAAC4C,kBAAkB,CAAC,EAAE,CAAC,CAC1D,CAAE,MAAOC,GAAG,CAAE,CACZC,OAAO,CAACC,IAAI,CAAC,sDAAsD,CAAC,CACpEJ,aAAa,CAAG,KAAM,CAAA3C,WAAW,CAACgD,eAAe,CAAC,CAAC,CACrD,CAEA,GAAIL,aAAa,EAAIA,aAAa,CAACM,MAAM,CAAG,CAAC,CAAE,CAC7CnC,YAAY,CAAC6B,aAAa,CAAC,CAC7B,CAAC,IAAM,CACL;AACA7B,YAAY,CAACoC,kBAAkB,CAAC,CAAC,CAAC,CACpC,CACF,CAAE,MAAOL,GAAG,CAAE,CACZC,OAAO,CAACjB,KAAK,CAAC,0BAA0B,CAAEgB,GAAG,CAAC,CAC9Cf,QAAQ,CAAC,mDAAmD,CAAC,CAC7DhB,YAAY,CAACoC,kBAAkB,CAAC,CAAC,CAAC,CACpC,CAAC,OAAS,CACRtB,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAsB,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,MAAO,CACL,CACEC,EAAE,CAAE,CAAC,CACLC,YAAY,CAAE,sDAAsD,CACpEC,MAAM,CAAE,mDAAmD,CAC3DC,WAAW,CAAE,qDAAqD,CAClEC,eAAe,CAAE,UACnB,CAAC,CACD,CACEJ,EAAE,CAAE,CAAC,CACLC,YAAY,CAAE,mCAAmC,CACjDC,MAAM,CAAE,0DAA0D,CAClEC,WAAW,CAAE,kCAAkC,CAC/CC,eAAe,CAAE,UACnB,CAAC,CACD,CACEJ,EAAE,CAAE,CAAC,CACLC,YAAY,CAAE,gDAAgD,CAC9DC,MAAM,CAAE,uEAAuE,CAC/EC,WAAW,CAAE,6CAA6C,CAC1DC,eAAe,CAAE,cACnB,CAAC,CACD,CACEJ,EAAE,CAAE,CAAC,CACLC,YAAY,CAAE,uFAAuF,CACrGC,MAAM,CAAE,wEAAwE,CAChFC,WAAW,CAAE,oFAAoF,CACjGC,eAAe,CAAE,cACnB,CAAC,CACD,CACEJ,EAAE,CAAE,CAAC,CACLC,YAAY,CAAE,qEAAqE,CACnFC,MAAM,CAAE,+DAA+D,CACvEC,WAAW,CAAE,oEAAoE,CACjFC,eAAe,CAAE,UACnB,CAAC,CACF,CACH,CAAC,CAED,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,GAAI3C,SAAS,CAACoC,MAAM,GAAK,CAAC,CAAE,CAC1BnB,QAAQ,CAAC,sDAAsD,CAAC,CAChE,OACF,CAEA2B,cAAc,CAAC,CAAC,CAChB7C,YAAY,CAACP,WAAW,CAACE,OAAO,CAAC,CACjC8B,gBAAgB,CAAC,IAAI,CAAC,CACxB,CAAC,CAED,KAAM,CAAAqB,SAAS,CAAGA,CAAA,GAAM,CACtB9C,YAAY,CAACP,WAAW,CAACG,MAAM,CAAC,CAChC6B,gBAAgB,CAAC,KAAK,CAAC,CACzB,CAAC,CAED,KAAM,CAAAsB,UAAU,CAAGA,CAAA,GAAM,CACvB/C,YAAY,CAACP,WAAW,CAACE,OAAO,CAAC,CACjC8B,gBAAgB,CAAC,IAAI,CAAC,CACxB,CAAC,CAED,KAAM,CAAAuB,QAAQ,CAAGA,CAAA,GAAM,CACrBhD,YAAY,CAACP,WAAW,CAACI,QAAQ,CAAC,CAClC4B,gBAAgB,CAAC,KAAK,CAAC,CACzB,CAAC,CAED,KAAM,CAAAoB,cAAc,CAAGA,CAAA,GAAM,CAC3BzC,uBAAuB,CAAC,CAAC,CAAC,CAC1BE,QAAQ,CAAC,CAAC,CAAC,CACXE,iBAAiB,CAAC,CAAC,CAAC,CACpBE,mBAAmB,CAAC,CAAC,CAAC,CACtBE,iBAAiB,CAAC,IAAI,CAAC,CACvBE,aAAa,CAAC,KAAK,CAAC,CACpBM,cAAc,CAAC,CAAC,CAAC,CACjBE,aAAa,CAACO,IAAI,EAAIA,IAAI,CAAG,CAAC,CAAC,CAC/BX,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAED,KAAM,CAAA+B,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAIlD,SAAS,GAAKN,WAAW,CAACE,OAAO,CAAE,CACrCqD,QAAQ,CAAC,CAAC,CACZ,CACF,CAAC,CAED,KAAM,CAAAE,YAAY,CAAIT,MAAM,EAAK,CAC/B,GAAI5B,UAAU,CAAE,OAEhB,KAAM,CAAAsC,eAAe,CAAGlD,SAAS,CAACE,oBAAoB,CAAC,CACvD,KAAM,CAAAiD,SAAS,CAAGX,MAAM,GAAKU,eAAe,CAACV,MAAM,CAEnD7B,iBAAiB,CAAC6B,MAAM,CAAC,CACzB3B,aAAa,CAAC,IAAI,CAAC,CAEnB,GAAIsC,SAAS,CAAE,CACb9C,QAAQ,CAACuB,IAAI,EAAIA,IAAI,CAAG,CAAC,CAAC,CAC1BrB,iBAAiB,CAACqB,IAAI,EAAIA,IAAI,CAAG,CAAC,CAAC,CACrC,CAAC,IAAM,CACLnB,mBAAmB,CAACmB,IAAI,EAAIA,IAAI,CAAG,CAAC,CAAC,CACvC,CAEA;AACAwB,UAAU,CAAC,IAAM,CACfC,YAAY,CAAC,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,KAAM,CAAAA,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAInD,oBAAoB,CAAGF,SAAS,CAACoC,MAAM,CAAG,CAAC,CAAE,CAC/CjC,uBAAuB,CAACyB,IAAI,EAAIA,IAAI,CAAG,CAAC,CAAC,CACzCjB,iBAAiB,CAAC,IAAI,CAAC,CACvBE,aAAa,CAAC,KAAK,CAAC,CACtB,CAAC,IAAM,CACLkC,QAAQ,CAAC,CAAC,CACZ,CACF,CAAC,CAED,KAAM,CAAAO,YAAY,CAAGA,CAAA,GAAM,CACzBvD,YAAY,CAACP,WAAW,CAACC,IAAI,CAAC,CAC9B+B,gBAAgB,CAAC,KAAK,CAAC,CACvBoB,cAAc,CAAC,CAAC,CAClB,CAAC,CAED,KAAM,CAAAW,SAAS,CAAGA,CAAA,GAAM,CACtBX,cAAc,CAAC,CAAC,CAChB7C,YAAY,CAACP,WAAW,CAACE,OAAO,CAAC,CACjC8B,gBAAgB,CAAC,IAAI,CAAC,CACxB,CAAC,CAED,KAAM,CAAAgC,eAAe,CAAGA,CAAA,GAAM,CAC5B/B,aAAa,CAAC,CAAC,CACjB,CAAC,CAED,KAAM,CAAAyB,eAAe,CAAGlD,SAAS,CAACE,oBAAoB,CAAC,CACvD,KAAM,CAAAuD,QAAQ,CAAGzD,SAAS,CAACoC,MAAM,CAAG,CAAC,CAAI,CAAClC,oBAAoB,CAAG,CAAC,EAAIF,SAAS,CAACoC,MAAM,CAAI,GAAG,CAAG,CAAC,CAEjG,mBACE/C,KAAA,QAAKqE,SAAS,CAAC,KAAK,CAAAC,QAAA,EAEjB7D,SAAS,GAAKN,WAAW,CAACC,IAAI,EAAIK,SAAS,GAAKN,WAAW,CAACI,QAAQ,eACnEP,KAAA,QAAKqE,SAAS,CAAC,eAAe,CAAAC,QAAA,EAAC,SACtB,CAACvD,KAAK,CAAC,KAAG,CAACJ,SAAS,CAACoC,MAAM,EAC/B,CACN,cAED/C,KAAA,QAAKqE,SAAS,CAAC,gBAAgB,CAAAC,QAAA,EAC5B7C,OAAO,eACNzB,KAAA,QAAKqE,SAAS,CAAC,SAAS,CAAAC,QAAA,eACtBpE,IAAA,QAAKmE,SAAS,CAAC,SAAS,CAAM,CAAC,cAC/BnE,IAAA,MAAAoE,QAAA,CAAG,sBAAoB,CAAG,CAAC,EACxB,CACN,CAEA3C,KAAK,eACJ3B,KAAA,QAAKqE,SAAS,CAAC,OAAO,CAAAC,QAAA,EACnB3C,KAAK,cACNzB,IAAA,WAAQmE,SAAS,CAAC,mBAAmB,CAACE,OAAO,CAAEJ,eAAgB,CAACK,KAAK,CAAE,CAAEC,UAAU,CAAE,MAAO,CAAE,CAAAH,QAAA,CAAC,OAE/F,CAAQ,CAAC,EACN,CACN,CAGA7D,SAAS,GAAKN,WAAW,CAACC,IAAI,EAAI,CAACqB,OAAO,eACzCzB,KAAA,QAAAsE,QAAA,eACEpE,IAAA,OAAAoE,QAAA,CAAI,gCAAoB,CAAI,CAAC,cAC7BpE,IAAA,MAAAoE,QAAA,CAAG,uDAAqD,CAAG,CAAC,cAE5DtE,KAAA,QAAKqE,SAAS,CAAC,YAAY,CAACG,KAAK,CAAE,CAAEE,YAAY,CAAE,MAAO,CAAE,CAAAJ,QAAA,eAC1DtE,KAAA,QAAKqE,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBpE,IAAA,SAAMmE,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAE3D,SAAS,CAACoC,MAAM,CAAO,CAAC,cACtD7C,IAAA,SAAMmE,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,qBAAmB,CAAM,CAAC,EACpD,CAAC,cACNtE,KAAA,QAAKqE,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBtE,KAAA,SAAMqE,SAAS,CAAC,YAAY,CAAAC,QAAA,EAAErC,aAAa,CAAC,GAAC,EAAM,CAAC,cACpD/B,IAAA,SAAMmE,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,YAAU,CAAM,CAAC,EAC3C,CAAC,cACNtE,KAAA,QAAKqE,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBpE,IAAA,SAAMmE,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,iBAAe,CAAM,CAAC,cACnDpE,IAAA,SAAMmE,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,eAAa,CAAM,CAAC,EAC9C,CAAC,EACH,CAAC,cAENtE,KAAA,QAAKqE,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BpE,IAAA,WACEmE,SAAS,CAAC,iBAAiB,CAC3BE,OAAO,CAAEjB,SAAU,CACnBqB,QAAQ,CAAEhE,SAAS,CAACoC,MAAM,GAAK,CAAE,CAAAuB,QAAA,CAClC,YAED,CAAQ,CAAC,cACTpE,IAAA,WAAQmE,SAAS,CAAC,mBAAmB,CAACE,OAAO,CAAEJ,eAAgB,CAAAG,QAAA,CAAC,kBAEhE,CAAQ,CAAC,EACN,CAAC,EACH,CACN,CAGA7D,SAAS,GAAKN,WAAW,CAACE,OAAO,EAAI,CAACoB,OAAO,eAC5CzB,KAAA,QAAAsE,QAAA,eACEpE,IAAA,CAACP,KAAK,EACJiF,QAAQ,CAAE3C,aAAc,CACxB4C,QAAQ,CAAElB,YAAa,CACvBmB,QAAQ,CAAE5C,aAAc,CACxB6C,OAAO,CAAEhD,UAAW,CACrB,CAAC,cAEF/B,KAAA,QAAKqE,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBtE,KAAA,QAAKqE,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBpE,IAAA,SAAMmE,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEzD,oBAAoB,CAAG,CAAC,CAAO,CAAC,cAC9DX,IAAA,SAAMmE,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,UAAQ,CAAM,CAAC,EACzC,CAAC,cACNtE,KAAA,QAAKqE,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBpE,IAAA,SAAMmE,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAE3D,SAAS,CAACoC,MAAM,CAAO,CAAC,cACtD7C,IAAA,SAAMmE,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,OAAK,CAAM,CAAC,EACtC,CAAC,cACNtE,KAAA,QAAKqE,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBtE,KAAA,SAAMqE,SAAS,CAAC,YAAY,CAAAC,QAAA,EAAEU,IAAI,CAACC,KAAK,CAACb,QAAQ,CAAC,CAAC,GAAC,EAAM,CAAC,cAC3DlE,IAAA,SAAMmE,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,UAAQ,CAAM,CAAC,EACzC,CAAC,EACH,CAAC,cAENpE,IAAA,CAACN,QAAQ,EACPsF,QAAQ,CAAErB,eAAgB,CAC1BsB,QAAQ,CAAEvB,YAAa,CACvBrC,UAAU,CAAEA,UAAW,CACvBF,cAAc,CAAEA,cAAe,CAC/B+D,aAAa,CAAEvB,eAAe,SAAfA,eAAe,iBAAfA,eAAe,CAAEV,MAAO,CACxC,CAAC,cAEFnD,KAAA,QAAKqE,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BpE,IAAA,WAAQmE,SAAS,CAAC,mBAAmB,CAACE,OAAO,CAAEf,SAAU,CAAAc,QAAA,CAAC,OAE1D,CAAQ,CAAC,cACTpE,IAAA,WAAQmE,SAAS,CAAC,gBAAgB,CAACE,OAAO,CAAEb,QAAS,CAAAY,QAAA,CAAC,WAEtD,CAAQ,CAAC,EACN,CAAC,EACH,CACN,CAGA7D,SAAS,GAAKN,WAAW,CAACG,MAAM,eAC/BN,KAAA,QAAAsE,QAAA,eACEpE,IAAA,OAAAoE,QAAA,CAAI,0BAAc,CAAI,CAAC,cACvBpE,IAAA,MAAAoE,QAAA,CAAG,2CAAyC,CAAG,CAAC,cAEhDtE,KAAA,QAAKqE,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBtE,KAAA,QAAKqE,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBpE,IAAA,SAAMmE,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEvD,KAAK,CAAO,CAAC,cAC3Cb,IAAA,SAAMmE,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,eAAa,CAAM,CAAC,EAC9C,CAAC,cACNtE,KAAA,QAAKqE,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBpE,IAAA,SAAMmE,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEzD,oBAAoB,CAAG,CAAC,CAAO,CAAC,cAC9DX,IAAA,SAAMmE,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,UAAQ,CAAM,CAAC,EACzC,CAAC,cACNtE,KAAA,QAAKqE,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBpE,IAAA,SAAMmE,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAE3D,SAAS,CAACoC,MAAM,CAAGlC,oBAAoB,CAAG,CAAC,CAAO,CAAC,cACjFX,IAAA,SAAMmE,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,WAAS,CAAM,CAAC,EAC1C,CAAC,EACH,CAAC,cAENtE,KAAA,QAAKqE,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BpE,IAAA,WAAQmE,SAAS,CAAC,iBAAiB,CAACE,OAAO,CAAEd,UAAW,CAAAa,QAAA,CAAC,QAEzD,CAAQ,CAAC,cACTpE,IAAA,WAAQmE,SAAS,CAAC,mBAAmB,CAACE,OAAO,CAAEN,YAAa,CAAAK,QAAA,CAAC,WAE7D,CAAQ,CAAC,cACTpE,IAAA,WAAQmE,SAAS,CAAC,gBAAgB,CAACE,OAAO,CAAEb,QAAS,CAAAY,QAAA,CAAC,UAEtD,CAAQ,CAAC,EACN,CAAC,EACH,CACN,CAGA7D,SAAS,GAAKN,WAAW,CAACI,QAAQ,eACjCL,IAAA,CAACL,UAAU,EACTkB,KAAK,CAAEA,KAAM,CACbsE,cAAc,CAAE1E,SAAS,CAACoC,MAAO,CACjC9B,cAAc,CAAEA,cAAe,CAC/BE,gBAAgB,CAAEA,gBAAiB,CACnCU,WAAW,CAAEA,WAAY,CACzByD,WAAW,CAAEpB,SAAU,CACvBqB,UAAU,CAAEtB,YAAa,CAC1B,CACF,EACE,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAzD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}