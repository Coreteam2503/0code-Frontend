{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Question=_ref=>{let{question,onAnswer,showResult=false,selectedAnswer=null,correctAnswer=null}=_ref;const[selected,setSelected]=useState(selectedAnswer);useEffect(()=>{setSelected(selectedAnswer);},[selectedAnswer]);if(!question){return/*#__PURE__*/_jsx(\"div\",{className:\"question-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"})})});}// Generate multiple choice options based on the correct answer\nconst generateChoices=(correctAnswer,questionText)=>{if(!correctAnswer)return[];// For \"What does this mean?\" type questions, we'll create plausible alternatives\nconst choices=[correctAnswer];// Add some generic wrong answers for demonstration\n// In a real implementation, you might want to generate these more intelligently\nconst wrongAnswers=['A syntax error in the code','A runtime exception','A deprecated method call','An undefined variable reference','A memory allocation issue','A type conversion error'].filter(answer=>answer!==correctAnswer);// Add 3 random wrong answers\nwhile(choices.length<4&&wrongAnswers.length>0){const randomIndex=Math.floor(Math.random()*wrongAnswers.length);choices.push(wrongAnswers.splice(randomIndex,1)[0]);}// Shuffle the choices\nreturn choices.sort(()=>Math.random()-0.5);};const choices=generateChoices(question.answer,question.questionText);const handleChoiceClick=choice=>{if(showResult)return;// Don't allow selection if showing results\nsetSelected(choice);onAnswer(choice);};const getChoiceClass=choice=>{let className='choice-btn';if(selected===choice){className+=' selected';}if(showResult){if(choice===correctAnswer){className+=' correct';}else if(choice===selected&&choice!==correctAnswer){className+=' incorrect';}}return className;};return/*#__PURE__*/_jsxs(\"div\",{className:\"question-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-text\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"What does this mean?\"}),/*#__PURE__*/_jsx(\"br\",{}),question.questionText]}),question.codeSnippet&&/*#__PURE__*/_jsx(\"div\",{className:\"code-snippet\",children:question.codeSnippet}),/*#__PURE__*/_jsx(\"div\",{className:\"choices-container\",children:choices.map((choice,index)=>/*#__PURE__*/_jsxs(\"button\",{className:getChoiceClass(choice),onClick:()=>handleChoiceClick(choice),disabled:showResult,children:[String.fromCharCode(65+index),\". \",choice]},index))}),showResult&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'1rem',textAlign:'center'},children:selected===correctAnswer?/*#__PURE__*/_jsx(\"div\",{className:\"success\",children:\"\\u2713 Correct!\"}):/*#__PURE__*/_jsxs(\"div\",{className:\"error\",children:[\"\\u2717 Incorrect. The correct answer was: \",correctAnswer]})})]});};export default Question;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Question","_ref","question","onAnswer","showResult","selectedAnswer","correctAnswer","selected","setSelected","className","children","generateChoices","questionText","choices","wrongAnswers","filter","answer","length","randomIndex","Math","floor","random","push","splice","sort","handleChoiceClick","choice","getChoiceClass","codeSnippet","map","index","onClick","disabled","String","fromCharCode","style","marginTop","textAlign"],"sources":["C:/Users/jcupp/coderepos/0code/frontend/src/components/Question.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Question = ({ \n  question, \n  onAnswer, \n  showResult = false, \n  selectedAnswer = null,\n  correctAnswer = null \n}) => {\n  const [selected, setSelected] = useState(selectedAnswer);\n  \n  useEffect(() => {\n    setSelected(selectedAnswer);\n  }, [selectedAnswer]);\n\n  if (!question) {\n    return (\n      <div className=\"question-container\">\n        <div className=\"loading\">\n          <div className=\"spinner\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  // Generate multiple choice options based on the correct answer\n  const generateChoices = (correctAnswer, questionText) => {\n    if (!correctAnswer) return [];\n\n    // For \"What does this mean?\" type questions, we'll create plausible alternatives\n    const choices = [correctAnswer];\n    \n    // Add some generic wrong answers for demonstration\n    // In a real implementation, you might want to generate these more intelligently\n    const wrongAnswers = [\n      'A syntax error in the code',\n      'A runtime exception',\n      'A deprecated method call',\n      'An undefined variable reference',\n      'A memory allocation issue',\n      'A type conversion error'\n    ].filter(answer => answer !== correctAnswer);\n\n    // Add 3 random wrong answers\n    while (choices.length < 4 && wrongAnswers.length > 0) {\n      const randomIndex = Math.floor(Math.random() * wrongAnswers.length);\n      choices.push(wrongAnswers.splice(randomIndex, 1)[0]);\n    }\n\n    // Shuffle the choices\n    return choices.sort(() => Math.random() - 0.5);\n  };\n\n  const choices = generateChoices(question.answer, question.questionText);\n\n  const handleChoiceClick = (choice) => {\n    if (showResult) return; // Don't allow selection if showing results\n    \n    setSelected(choice);\n    onAnswer(choice);\n  };\n\n  const getChoiceClass = (choice) => {\n    let className = 'choice-btn';\n    \n    if (selected === choice) {\n      className += ' selected';\n    }\n    \n    if (showResult) {\n      if (choice === correctAnswer) {\n        className += ' correct';\n      } else if (choice === selected && choice !== correctAnswer) {\n        className += ' incorrect';\n      }\n    }\n    \n    return className;\n  };\n\n  return (\n    <div className=\"question-container\">\n      <div className=\"question-text\">\n        <strong>What does this mean?</strong>\n        <br />\n        {question.questionText}\n      </div>\n      \n      {question.codeSnippet && (\n        <div className=\"code-snippet\">\n          {question.codeSnippet}\n        </div>\n      )}\n      \n      <div className=\"choices-container\">\n        {choices.map((choice, index) => (\n          <button\n            key={index}\n            className={getChoiceClass(choice)}\n            onClick={() => handleChoiceClick(choice)}\n            disabled={showResult}\n          >\n            {String.fromCharCode(65 + index)}. {choice}\n          </button>\n        ))}\n      </div>\n      \n      {showResult && (\n        <div style={{ marginTop: '1rem', textAlign: 'center' }}>\n          {selected === correctAnswer ? (\n            <div className=\"success\">✓ Correct!</div>\n          ) : (\n            <div className=\"error\">✗ Incorrect. The correct answer was: {correctAnswer}</div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Question;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}